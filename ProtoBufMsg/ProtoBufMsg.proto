syntax = "proto3";

enum MsgType {
  TYPE_DATAREQUEST = 0;
  TYPE_MARKETUPDATE = 1;
  TYPE_TRANSACTION = 2;
  TYPE_INDEX_DATA = 3;
  TYPE_REPLAY_REQUEST= 4;
  TYPE_ORDER_REQUEST = 5;
  TYPE_RESPONSE_MSG = 6;
}

message MessageBase {
  MsgType type = 1;
  bytes msg = 2;
}

message MarketUpdate {
  //instrument id
  string code = 1;
  //could be stock chinese name
  string symbol = 2;
  //exchange id
  string exchange = 3;

  int32 status = 4;
  //last trading day close pirce
  int32 pre_close_price = 5;
  //this trading day open price
  double open_price = 6;
  //this trading day close price
  double close_price = 7;
  //lastest trading price
  double last_price = 8;
  //this trading day
  double highest_price = 9;
  double lowest_price = 10;
  double high_limit_price = 11;
  double low_limit_price = 12;

  //last trading day settle price
  double pre_settlement_price = 13;
  //this trading day settle price
  double settlement_price = 14;
  //this trading day avg price
  double average_price = 15;
  //last trading day open interest
  int32 pre_open_interest = 16;
  //last trading day open interest
  int32 open_interest = 17;

  int32 num_trades = 18;
  double turnover = 19;
  int64 volume = 20;
  int64 total_bid_vol = 21;
  int64 total_ask_vol = 22;
  int32 weighted_avg_bid_price = 23;
  int32 weighted_avg_ask_price = 24;
  int32 iopv = 25;
  int32 yield_to_maturity = 26;

  int32 action_day = 27;
  string trading_day = 28;
  //the ts that come with origianl tick data, format "09:30:00" --> "093000000"
  string exchange_timestamp = 29;
  //when out agent recv ts
  string recv_timestamp = 30;

  repeated double bid_price = 31;
  repeated int32 bid_volume = 32;
  repeated double ask_price = 33;
  repeated int32 ask_volume = 34;
}

message Transaction {
  string code = 1;
  string symbol = 2;
  string exchange = 3;

  int32 action_day = 4;
  int32 time = 5;
  int32 index = 6;
  int32 price = 7;
  int32 volume = 8;
  int32 turnover = 9;
  int32 bsflag = 10;
  string ch_order_kind = 11;
  string ch_function_code = 12;

  int32 ask_order = 13;
  int32 bid_order = 14;
}

message IndexData {
  string code = 1;
  string symbol = 2;
  string exchange = 3;

  int32 action_day = 4;
  int32 time = 5;
  int32 open_index = 6;
  int32 high_index = 7;
  int32 low_index = 8;
  int32 last_index = 9;
  int64 total_volume = 10;
  int64 turnover = 11;
  int32 pre_close_index = 12;
}

message DataRequest {
  string code = 1;
  string symbol = 2;
  string exchange = 3;
  string data_type = 4;
}

message ReplayRequest {
  repeated string wind_code = 1;
  string start_date = 2;
  string end_date = 3;
  string day_length = 4;
  int32 replay_rate = 5;
}

enum RequestType {
  TYPE_LIMIT_ORDER_REQUEST = 0;
  TYPE_MARKET_ORDER_REQUEST = 1;
  TYPE_CANCEL_ORDER_REQUEST = 2;
}

enum TradeDirection {
  LONG_BUY = 0;
  SHORT_SELL = 1;
}

enum PositionDirection {
  OPEN_POSITION = 0;
  CLOSE_POSITION = 1;
}

//New Order
//Cancel Order
message OrderRequest {
  RequestType type = 1;
  //this field is required !
  //response address ip:port, format as 110.31.12.132:13213
  //when requeset got feedback, for whom it should go to
  string response_address = 2;
  string id = 3;
  TradeDirection buy_sell = 4;
  //for limit order
  double limit_price = 5;
  //Only for China futures market
  PositionDirection open_close = 6;
}

enum ResponseMsgType {
  TYPE_NEW_ORDER_CONFIRM = 0;
  TYPE_CANCEL_ORDER_CONFIRM = 1;
  TYPE_ERROR = 2;
  //make sure to check qty, could be partial trade
  TYPE_TRADE = 3;
}

//Error
//Trade(Could be partial trade)
//NewOrder Confirm
//Cancel Confirm
message ResponseMessage {
  ResponseMsgType type = 1;
  string id = 2;
  string refId = 3;

  string code = 4;
  string symbol = 5;
  string exchange = 6;
  double price = 7;
  TradeDirection buy_sell = 8;
  int32 trade_quantity = 9;
  int32 error_code = 10;
  int32 error_msg = 11;

  //the ts that come with origianl tick data, format "09:30:00" --> "093000000"
  string exchange_timestamp = 12;
  //when our agent recv ts
  string recv_timestamp = 13;
}

message ServiceOrder {

}
